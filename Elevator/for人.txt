for (int i = 0; i < 150; i++) //開始檢查人   迴圈斷掉i=7;
        {
            if (people.getState(i + 1) == 1) //如果停留中
            {
                if (people.getStaytime(i + 1) == 0)
                {
                    people.Displacement(i + 1);    //移動
                    callElevator(people, i + 1, people.getCurrentfloor(i + 1)); //按電梯
                }
                else
                    people.setStaytime(i + 1, people.getStaytime(i + 1) - 1); //-1單位時間
            }
            else if (people.getState(i + 1) == 2) //如果在等電梯
            {
                int d;
                if (people.getDestination(i + 1) - people.getCurrentfloor(i + 1) > 0)
                    d = 1;
                else if (people.getDestination(i + 1) - people.getCurrentfloor(i + 1) < 0)
                    d = 0;
                if (IfAvailable(elevator1, d))
                {
                    setPeopleInElevator(elevator1, people.getDestination(i + 1));
                    people.setPosition(i + 1, 3);
                    people.setElevator(i + 1, 1);
                }
                else if (IfAvailable(elevator2, d))
                {
                    setPeopleInElevator(elevator2, people.getDestination(i + 1));
                    people.setPosition(i + 1, 3);
                    people.setElevator(i + 1, 2);
                }
                else if (IfAvailable(elevator3, d))
                {
                    setPeopleInElevator(elevator3, people.getDestination(i + 1));
                    people.setPosition(i + 1, 3);
                    people.setElevator(i + 1, 3);
                }
            }
            else if (people.getState(i + 1) == 3) //如果在電梯內
            {
                if (people.getElevator(i + 1) == 1)
                {
                    if (people.getDestination(i + 1) == elevator1.getNowFloor())
                    {
                        releasePeopleInElevator(elevator1);
                        people.setCurrentfloor(i + 1, elevator1.getNowFloor());
                        people.setDestination(i + 1, 0); //0:目前沒有要前往的樓層
                        people.setElevator(i + 1, 0);    //重設
                        people.setPosition(i + 1, 1);
                    }
                    if (elevator1.getNumOfPeople() < 10 && elevator1.getUpOrDown() == 1)
                        for (int j = 0; j < 10; j++)
                        {
                            elevator1.setarrPIE(j, i + 1);
                        }
                    else if (elevator2.getNumOfPeople() < 10 && elevator2.getUpOrDown() == 1)
                        for (int j = 0; j < 10; j++)
                        {
                            elevator2.setarrPIE(j, i + 1);
                        }
                    else if (elevator3.getNumOfPeople() < 10 && elevator3.getUpOrDown() == 1)
                        for (int j = 0; j < 10; j++)
                        {
                            elevator3.setarrPIE(j, i + 1);
                        }
                }
                if (people.getElevator(i + 1) == 2)
                {
                    if (people.getDestination(i + 1) == elevator2.getNowFloor())
                    {
                        releasePeopleInElevator(elevator2);
                        people.setCurrentfloor(i + 1, elevator2.getNowFloor());
                        people.setDestination(i + 1, 0); //0:目前沒有要前往的樓層
                        people.setElevator(i + 1, 0);    //重設
                        people.setPosition(i + 1, 1);
                    }
                }
                if (people.getElevator(i + 1) == 3)
                {
                    if (people.getDestination(i + 1) == elevator3.getNowFloor())
                    {
                        releasePeopleInElevator(elevator3);
                        people.setCurrentfloor(i + 1, elevator3.getNowFloor());
                        people.setDestination(i + 1, 0); //0:目前沒有要前往的樓層
                        people.setElevator(i + 1, 0);    //重設
                        people.setPosition(i + 1, 1);
                    }
                }
            }
            if (people.getState(i + 1) == 0 && people.getCurrentfloor(i + 1) == 1)
                people.deleteID(i + 1);
        }